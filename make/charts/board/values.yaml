image:
  registry: "10.111.24.131:5000"
  tag: "7.4-150-g11a0d2d"
localtime:
  path: /etc/localtime
apiserver:
  name: "apiserver"
  replicaCount: 1
  image:
    repository: board_apiserver
    tag: ""
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8088
  resources:
    limits:
     cpu: 100m
     memory: 128Mi
    requests:
     cpu: 100m
     memory: 128Mi
  nodeSelector:
    kubernetes.io/arch: amd64
  tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - 10.111.24.69
  restartPolicy: Always
chartmuseum:
  name: "chartmuseum"
  replicaCount: 1
  image:
    repository: board_chartmuseum
    tag: ""
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  resources: {}
  nodeSelector: {}
  tolerations: {}
  affinity: {}
  restartPolicy: Always
  persistence:
    enabled: true
    existingClaim: ""
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    volumeName: chartmuseum
db:
  name: "db"
  replicaCount: 1
  image:
    repository: board_db
    tag: ""
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 3306
  resources: {}
  nodeSelector: {}
  tolerations: {}
  affinity: {}
  restartPolicy: Always
  persistence:
    enabled: true
    existingClaim: ""
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    volumeName: db
elasticsearch:
  name: "elasticsearch"
  replicaCount: 1
  image:
    repository: board_elasticsearch
    tag: ""
    pullPolicy: IfNotPresent
  service:
    type: NodePort
    port: 9200
  resources: {}
  nodeSelector: {}
  tolerations: {}
  affinity: {}
  restartPolicy: Always
  persistence:
    enabled: true
    existingClaim: ""
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    volumeName: elasticsearch
grafana:
  name: "grafana"
  replicaCount: 1
  image:
    repository: board_grafana
    tag: ""
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 3000
  resources: {}
  nodeSelector: {}
  tolerations: {}
  affinity: {}
  restartPolicy: Always
  persistence:
    enabled: true
    lib:
      existingClaim: ""
      ## database data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 8Gi
      volumeName: grafana-lib
    log:
      existingClaim: ""
      ## database data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 8Gi
      volumeName: grafana-log
kibana:
  name: "kibana"
  replicaCount: 1
  image:
    repository: board_kibana
    tag: ""
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 5601
  resources: {}
  nodeSelector: {}
  tolerations: {}
  affinity: {}
  restartPolicy: Always
prometheus:
  name: "prometheus"
  replicaCount: 1
  image:
    repository: board_prometheus
    tag: ""
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 9090
  resources: {}
  nodeSelector: {}
  tolerations: {}
  affinity: {}
  restartPolicy: Always
  persistence:
    enabled: true
    existingClaim: ""
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    volumeName: prometheus
proxy:
  name: "proxy"
  replicaCount: 1
  image:
    repository: board_proxy
    tag: ""
    pullPolicy: IfNotPresent
  service:
    type: NodePort
    httpPort: 80
    httpsPort: 443
    proxyPort: 8080
  resources: {}
  nodeSelector: {}
  tolerations: {}
  affinity: {}
  restartPolicy: Always
tokenserver:
  name: "tokenserver"
  replicaCount: 1
  image:
    repository: board_tokenserver
    tag: ""
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 4000
  resources: {}
  nodeSelector: {}
  tolerations: {}
  affinity: {}
  restartPolicy: Always